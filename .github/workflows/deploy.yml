name: Production Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted

    env:
      DOCKER_BUILDKIT: 1
      RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
      KAMAL_REGISTRY_PASSWORD: ${{ secrets.KAMAL_REGISTRY_PASSWORD }}
      KAMAL_REGISTRY_USERNAME: ${{ vars.KAMAL_REGISTRY_USERNAME }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install essential build tools and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc make libssl-dev libreadline-dev zlib1g-dev

      - name: Install rbenv and ruby-build
        run: |
          # Check if rbenv is already installed, if not then install it
          if [ ! -d "$HOME/.rbenv" ]; then
            git clone https://github.com/rbenv/rbenv.git ~/.rbenv
          fi

          # Check if ruby-build is already installed, if not then install it
          if [ ! -d "$HOME/.rbenv/plugins/ruby-build" ]; then
            git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build
          fi

          # Modify the PATH for the current step
          export PATH="$HOME/.rbenv/bin:$PATH"
          eval "$(rbenv init -)"

      - name: Install Ruby using rbenv
        run: |
          # Modify the PATH for the current step
          export PATH="$HOME/.rbenv/bin:$PATH"
          eval "$(rbenv init -)"

          # Install Ruby
          rbenv install 3.2.2 -s  # The -s flag skips installation if the specified version is already installed
          rbenv global 3.2.2

      - name: Install kamal
        run: gem install kamal

      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/arm64

      - uses: docker/build-push-action@v5
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Copy Config
        run: cp config/deploy.yml.prod config/deploy.yml

      - name: Deploy Application
        run: kamal deploy

:concurrency: 5
:queues:
  - urgent
  - high_priority
  - mailers
  - refresh
  - import
  - update
  - default
  - low_priority
  - very_low_priority
  - active_storage_analysis
  - active_storage_purge

:scheduler:
  :schedule:
    enqueue_channel_video_fetcher_for_all_channels_with_music_recognizer:
      cron: "0 5 * * * Europe/Berlin" # Runs daily at 5am Berlin time
      class: ImportNewVideosForAllChannelsJob
      queue: default
      args:
        use_scraper: false
        use_music_recognizer: true
      enabled: <%= ENV['RAILS_ENV'] == 'production' %>
    enqueue_channel_video_fetcher_for_all_channels_without_music_recognizer:
      cron: "0 5 * * * Europe/Berlin" # Runs daily at 5am Berlin time
      class: ImportNewVideosForAllChannelsJob
      queue: default
      args:
        use_scraper: false
        use_music_recognizer: false
      enabled: false
    enqueue_update_music_recognized_videos_job:
      cron: "0 12 * * * Europe/Berlin" # Runs daily at 12pm Berlin time
      class: UpdateUnrecognizedMusicVideosJob
      queue: default
      enabled: <%= ENV['RAILS_ENV'] == 'production' %>
    enqueue_update_active_channels_job:
      cron: "0 3 * * * Europe/Berlin" # Runs daily at 3am Berlin time
      class: UpdateActiveChannelsJob
      queue: default
      enabled: <%= ENV['RAILS_ENV'] == 'production' %>
    sitemap:
      cron: "0 0 12 * * * Europe/Berlin" # every day at 16:00, Berlin time
      class: Shimmer::SitemapJob
    refresh_video_searches_view:
      every: ["60m"]
      class: RefreshVideoSearchesViewJob
      queue: low_priority
      enabled: <%= ENV['RAILS_ENV'] == 'production' %>
    refresh_video_scores_scores:
      every: ["10m"]
      class: RefreshVideoScoresJob
      queue: low_priority
      enabled: <%= ENV['RAILS_ENV'] == 'production' %>

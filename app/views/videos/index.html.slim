- meta.title = t(".meta_title")
- meta.description = t(".meta_description")
- meta.image = image_url("app_icon.png")
- meta.canonical = root_path
= render "banner/index"
#videos.stack
  -binding.irb
  - if (params[:sort].blank? && @videos.present? && (params[:leader].present? || params[:follower].present? || params[:couple].present?))
    = turbo_frame_tag :trending_videos, src: trending_video_sections_path(leader: params[:leader], follower: params[:follower], couple: params[:couple]), target: "_top"
      .video-section
        .video-section__header
          = link_to t(".trending"), root_path(filtering_params.merge(sort: "trending")), class: "heading-2"
        = render "components/spinner"
        .video-section__link
          = link_to t(".see_more"), root_path(filtering_params.merge(sort: "trending")), class: "heading-4"
    = turbo_frame_tag :newest_videos, src: recent_video_sections_path(leader: params[:leader], follower: params[:follower], couple: params[:couple]), target: "_top"
      .video-section
        .video-section__header
          = link_to t(".newest"), root_path(filtering_params.merge(sort: "newest")), class: "heading-2"
        = render "components/spinner"
        .video-section__link
          = link_to t(".see_more"), root_path(filtering_params.merge(sort: "newest")), class: "heading-4"
    = turbo_frame_tag :oldest_videos, src: oldest_video_sections_path(leader: params[:leader], follower: params[:follower], couple: params[:couple]), target: "_top"
      .video-section
        .video-section__header
          = link_to t(".oldest"), root_path(filtering_params.merge(sort: "oldest")), class: "heading-2"
        = render "components/spinner"
        .video-section__link
          = link_to t(".see_more"), root_path(filtering_params.merge(sort: "oldest")), class: "heading-4"
    = turbo_frame_tag :performance_videos, src: performances_video_sections_path(leader: params[:leader], follower: params[:follower], couple: params[:couple]), target: "_top"
      .video-section
        .video-section__header
          = link_to t(".performance"), root_path(filtering_params.merge(sort: "performance")), class: "heading-2"
        = render "components/spinner"
        .video-section__link
          = link_to t(".see_more"), root_path(filtering_params.merge(sort: "performance")), class: "heading-4"
    = paginated @videos, class: "grid grid--videos"
  - elsif @videos.present?
    = paginated @videos, class: "grid grid--videos"

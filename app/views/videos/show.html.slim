- cache_if !@video.hidden?, ["video_show", @video.youtube_id, current_user, @video.updated_at] do
  - content_for :meta_title, primary_title(@video.display.dancer_names, @video.title, @video.display.any_song_attributes, @video.youtube_id)
  - content_for :meta_description, @video.display.any_song_attributes
  - content_for :meta_image, "https://img.youtube.com/vi/#{@video.youtube_id}/hqdefault.jpg"
  div data-controller="hotkeys" data-hotkeys-bindings-value='{"shift + 1": "#hotkey->youtube#setTime1","shift + 2": "#hotkey->youtube#setTime2","m": "#hotkey->youtube#toggleMute","+": "#hotkey->youtube#increaseVolume","-": "#hotkey->youtube#decreaseVolume","f": "#hotkey->youtube#playFullscreen ","left": "#hotkey->youtube#seekBackward","right": "#hotkey->youtube#seekForward","shift + . ": "#hotkey->youtube#increasePlaybackRate","shift + , ": "#hotkey->youtube#decreasePlaybackRate"}'
  #hotkey data-controller="youtube" data-youtube-video-id-value="#{@video.youtube_id}" data-youtube-start-seconds-value="#{@start_value}" data-youtube-end-seconds-value="#{@end_value}" data-youtube-playback-rate-value="#{@playback_rate}"
    .video-responsive-background
      .video-responsive-container
        .video-responsive
          div data-youtube-target="frame"
    = render partial: "videos/show/video_info_primary"
    .columns
      .column
        = render partial: "videos/show/video_info_details"
      .column
        = render partial: "videos/show/recommended_videos", locals: { videos: @videos_from_this_performance, header: "Videos from this Performance" }
        = render partial: "videos/show/recommended_videos", locals: { videos: @videos_with_same_dancers, header: "Videos from #{@video.leaders.first.name.titleize} & #{@video.followers.first.name.titleize}" } if @video.leaders.present? && @video.followers.present?
        = render partial: "videos/show/recommended_videos", locals: { videos: @videos_with_same_event, header: "Videos from #{@video.event.title}" } if @video.event.present?
        = render partial: "videos/show/recommended_videos", locals: { videos: @videos_with_same_song, header: "Videos with #{@video.song.title.titleize} by #{@video.song.artist.titleize}" } if @video.song.present?
        = render partial: "videos/show/recommended_videos", locals: { videos: @videos_with_same_channel, header: "Videos from #{@video.channel.title}" }

= cache [video, "video-result"] do
  = link_to watch_path(v: video.youtube_id), class: ["search-result", "search-result--video"], data: { controller: "recent-search", "recent-search-gid-value": video.to_global_id.to_s, "recent-search-query-value": params[:query], "recent-search-category-value": params[:category], action: "click->recent-search#handleClick" } do
    .stack.stack--sm.stack--tablet-line
      .video-card__image-container
        = image_tag video.thumbnail, alt: t(".video_thumbnail_alt", video_title: video.title), width: 320, class: "video-card__image" if video.thumbnail.present?
        .video-card__duration = video.hd_duration_data
        - if video.performance_video&.position&.present?
          .video-card__performance-number
            = "#{video.performance_video.position} / #{video.performance.videos_count}" if video.performance_video.position.present?
      .stack.stack--xxs
        .video-card__title = video.title
        .video-card__metadata = [video.channel&.title,l(video.upload_date, format: :short_month_year),t('views_count', count: number_to_human(video.view_count, format: "%n%u", precision: 2, units: {thousand: "K", million: "M", billion: "B"}))].compact.join(" â€¢ ")
        - if video.dancer_videos.present?
          .scrollable-tags.scrollable-tags--small
            - video.dancer_videos.each do |dv|
              - if dv.role == "leader"  
                .tag.video-card__dancer = dv.dancer.name
              - elsif dv.role == "follower"
                .tag.video-card__dancer =dv.dancer.name
        - if video.song.present?
          .scrollable-tags.scrollable-tags--small
            .video-card__song-metadata.tag = video.song.full_title
